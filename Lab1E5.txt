import requests
from time import sleep
from bs4 import BeautifulSoup
import re

pattern = r'0x[a-fA-F0-9]{40}'

def scrape_block(blocknumber, total_pages):
    total_fee = 0.0
    count = 0
    
    for page in range(1, total_pages + 1):
        api_url = f"https://etherscan.io/txs?block={blocknumber}&p={page}"
        headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0'}
        sleep(0.5)
        response = requests.get(api_url, headers=headers)
        txs = BeautifulSoup(response.content, 'html.parser').select('table.table-hover tbody tr')
        
        for row in txs:
            tx = extract_transaction_info(row)
            if tx:
                count += 1
                try:
                    fee_value = float(tx['fee'].replace(',', ''))  # Remove commas and convert to float
                    total_fee += fee_value
                except ValueError:
                    print(f"Skipping transaction {tx['hash']} due to invalid fee format: {tx['fee']}")
                print(f"Transaction ID: {tx['hash']}, Block: {tx['block']}, From: {tx['from']}, To: {tx['to']}, Transaction Fee: {tx['fee']} ETH")
    
    if count > 0:
        avg_fee = total_fee / count
        print(f"\nAverage Transaction Fee for Block {blocknumber}: {avg_fee:.8f} ETH")
    else:
        print("No transactions found.")

def extract_transaction_info(tr_element):
    try:
        tx_hash = tr_element.select_one('.myFnExpandBox_searchVal')
        tx_hash = tx_hash.text.strip() if tx_hash else "Unknown"

        block = tr_element.select_one('td:nth-child(4) a')
        block = block.text.strip() if block else "Unknown"

        from_element = tr_element.select_one('td:nth-child(8) a')
        from_address = from_element.text.strip() if from_element and from_element.text else "Unknown"

        to_element = tr_element.select_one('td:nth-child(10) a')
        to_address = to_element.text.strip() if to_element and to_element.text else "Unknown"

        tx_fee = tr_element.select_one('.showTxnFee')
        tx_fee = tx_fee.text.strip().replace(' ETH', '') if tx_fee else "0"
        
        return {
            'hash': tx_hash,
            'block': block,
            'from': from_address,
            'to': to_address,
            'fee': tx_fee
        }
    except Exception as e:
        print(f"Error extracting transaction info: {e}")
        return None

if __name__ == "__main__":
    scrape_block(15479087, 3)
